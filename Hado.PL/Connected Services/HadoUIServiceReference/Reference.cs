//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hado.PL.HadoUIServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HadoUIServiceReference.IHadoUIService")]
    public interface IHadoUIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherGet", ReplyAction="http://tempuri.org/IHadoUIService/TeacherGetResponse")]
        Hado.DL.Teacher TeacherGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherGet", ReplyAction="http://tempuri.org/IHadoUIService/TeacherGetResponse")]
        System.Threading.Tasks.Task<Hado.DL.Teacher> TeacherGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherAdd", ReplyAction="http://tempuri.org/IHadoUIService/TeacherAddResponse")]
        bool TeacherAdd(Hado.DL.Teacher teacherModel, string username, int roleid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherAdd", ReplyAction="http://tempuri.org/IHadoUIService/TeacherAddResponse")]
        System.Threading.Tasks.Task<bool> TeacherAddAsync(Hado.DL.Teacher teacherModel, string username, int roleid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherRemove", ReplyAction="http://tempuri.org/IHadoUIService/TeacherRemoveResponse")]
        bool TeacherRemove(int teacherid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherRemove", ReplyAction="http://tempuri.org/IHadoUIService/TeacherRemoveResponse")]
        System.Threading.Tasks.Task<bool> TeacherRemoveAsync(int teacherid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherEdit", ReplyAction="http://tempuri.org/IHadoUIService/TeacherEditResponse")]
        bool TeacherEdit(Hado.DL.Teacher model, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherEdit", ReplyAction="http://tempuri.org/IHadoUIService/TeacherEditResponse")]
        System.Threading.Tasks.Task<bool> TeacherEditAsync(Hado.DL.Teacher model, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherList", ReplyAction="http://tempuri.org/IHadoUIService/TeacherListResponse")]
        Hado.DL.Teacher[] TeacherList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/TeacherList", ReplyAction="http://tempuri.org/IHadoUIService/TeacherListResponse")]
        System.Threading.Tasks.Task<Hado.DL.Teacher[]> TeacherListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/UserGet", ReplyAction="http://tempuri.org/IHadoUIService/UserGetResponse")]
        Hado.DL.User UserGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/UserGet", ReplyAction="http://tempuri.org/IHadoUIService/UserGetResponse")]
        System.Threading.Tasks.Task<Hado.DL.User> UserGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/Login", ReplyAction="http://tempuri.org/IHadoUIService/LoginResponse")]
        Hado.DL.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/Login", ReplyAction="http://tempuri.org/IHadoUIService/LoginResponse")]
        System.Threading.Tasks.Task<Hado.DL.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonGet", ReplyAction="http://tempuri.org/IHadoUIService/LessonGetResponse")]
        Hado.DL.Lesson LessonGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonGet", ReplyAction="http://tempuri.org/IHadoUIService/LessonGetResponse")]
        System.Threading.Tasks.Task<Hado.DL.Lesson> LessonGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonAdd", ReplyAction="http://tempuri.org/IHadoUIService/LessonAddResponse")]
        bool LessonAdd(Hado.DL.Lesson lessonModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonAdd", ReplyAction="http://tempuri.org/IHadoUIService/LessonAddResponse")]
        System.Threading.Tasks.Task<bool> LessonAddAsync(Hado.DL.Lesson lessonModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonRemove", ReplyAction="http://tempuri.org/IHadoUIService/LessonRemoveResponse")]
        bool LessonRemove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonRemove", ReplyAction="http://tempuri.org/IHadoUIService/LessonRemoveResponse")]
        System.Threading.Tasks.Task<bool> LessonRemoveAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonEdit", ReplyAction="http://tempuri.org/IHadoUIService/LessonEditResponse")]
        bool LessonEdit(Hado.DL.Lesson lessonModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonEdit", ReplyAction="http://tempuri.org/IHadoUIService/LessonEditResponse")]
        System.Threading.Tasks.Task<bool> LessonEditAsync(Hado.DL.Lesson lessonModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonList", ReplyAction="http://tempuri.org/IHadoUIService/LessonListResponse")]
        Hado.DL.Lesson[] LessonList(int teacherid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/LessonList", ReplyAction="http://tempuri.org/IHadoUIService/LessonListResponse")]
        System.Threading.Tasks.Task<Hado.DL.Lesson[]> LessonListAsync(int teacherid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionTypeList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionTypeListResponse")]
        Hado.DL.QuestionType[] QuestionTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionTypeList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionTypeListResponse")]
        System.Threading.Tasks.Task<Hado.DL.QuestionType[]> QuestionTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionGet", ReplyAction="http://tempuri.org/IHadoUIService/QuestionGetResponse")]
        Hado.DL.Question QuestionGet(int lessonid, string content, int qtypeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionGet", ReplyAction="http://tempuri.org/IHadoUIService/QuestionGetResponse")]
        System.Threading.Tasks.Task<Hado.DL.Question> QuestionGetAsync(int lessonid, string content, int qtypeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAdd", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAddResponse")]
        bool QuestionAdd(Hado.DL.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAdd", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAddResponse")]
        System.Threading.Tasks.Task<bool> QuestionAddAsync(Hado.DL.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionRemove", ReplyAction="http://tempuri.org/IHadoUIService/QuestionRemoveResponse")]
        bool QuestionRemove(int QuestionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionRemove", ReplyAction="http://tempuri.org/IHadoUIService/QuestionRemoveResponse")]
        System.Threading.Tasks.Task<bool> QuestionRemoveAsync(int QuestionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionEdit", ReplyAction="http://tempuri.org/IHadoUIService/QuestionEditResponse")]
        bool QuestionEdit(Hado.DL.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionEdit", ReplyAction="http://tempuri.org/IHadoUIService/QuestionEditResponse")]
        System.Threading.Tasks.Task<bool> QuestionEditAsync(Hado.DL.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionListResponse")]
        Hado.DL.Question[] QuestionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionListResponse")]
        System.Threading.Tasks.Task<Hado.DL.Question[]> QuestionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionListByParameter", ReplyAction="http://tempuri.org/IHadoUIService/QuestionListByParameterResponse")]
        Hado.DL.Question[] QuestionListByParameter(int lessonId, string question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionListByParameter", ReplyAction="http://tempuri.org/IHadoUIService/QuestionListByParameterResponse")]
        System.Threading.Tasks.Task<Hado.DL.Question[]> QuestionListByParameterAsync(int lessonId, string question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerGet", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerGetResponse")]
        Hado.DL.QuestionAnswer QuestionAnswerGet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerGet", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerGetResponse")]
        System.Threading.Tasks.Task<Hado.DL.QuestionAnswer> QuestionAnswerGetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerAdd", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerAddResponse")]
        bool QuestionAnswerAdd(Hado.DL.QuestionAnswer question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerAdd", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerAddResponse")]
        System.Threading.Tasks.Task<bool> QuestionAnswerAddAsync(Hado.DL.QuestionAnswer question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerRemove", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerRemoveResponse")]
        bool QuestionAnswerRemove(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerRemove", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerRemoveResponse")]
        System.Threading.Tasks.Task<bool> QuestionAnswerRemoveAsync(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerEdit", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerEditResponse")]
        bool QuestionAnswerEdit(Hado.DL.QuestionAnswer question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerEdit", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerEditResponse")]
        System.Threading.Tasks.Task<bool> QuestionAnswerEditAsync(Hado.DL.QuestionAnswer question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerListByQuestion", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerListByQuestionResponse")]
        Hado.DL.QuestionAnswer QuestionAnswerListByQuestion(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerListByQuestion", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerListByQuestionResponse")]
        System.Threading.Tasks.Task<Hado.DL.QuestionAnswer> QuestionAnswerListByQuestionAsync(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerListResponse")]
        Hado.DL.QuestionAnswer[] QuestionAnswerList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionAnswerList", ReplyAction="http://tempuri.org/IHadoUIService/QuestionAnswerListResponse")]
        System.Threading.Tasks.Task<Hado.DL.QuestionAnswer[]> QuestionAnswerListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionVM", ReplyAction="http://tempuri.org/IHadoUIService/QuestionVMResponse")]
        Hado.DL.ViewModel.QuestionViewModel[] QuestionVM(int lessonid, int questiontypeid, int sorusayisi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionVM", ReplyAction="http://tempuri.org/IHadoUIService/QuestionVMResponse")]
        System.Threading.Tasks.Task<Hado.DL.ViewModel.QuestionViewModel[]> QuestionVMAsync(int lessonid, int questiontypeid, int sorusayisi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionVMRandom", ReplyAction="http://tempuri.org/IHadoUIService/QuestionVMRandomResponse")]
        Hado.DL.ViewModel.QuestionViewModel[] QuestionVMRandom(int lessonid, int questiontypeid, int sorusayisi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/QuestionVMRandom", ReplyAction="http://tempuri.org/IHadoUIService/QuestionVMRandomResponse")]
        System.Threading.Tasks.Task<Hado.DL.ViewModel.QuestionViewModel[]> QuestionVMRandomAsync(int lessonid, int questiontypeid, int sorusayisi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/GetSchool", ReplyAction="http://tempuri.org/IHadoUIService/GetSchoolResponse")]
        Hado.DL.School GetSchool(int teacherid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHadoUIService/GetSchool", ReplyAction="http://tempuri.org/IHadoUIService/GetSchoolResponse")]
        System.Threading.Tasks.Task<Hado.DL.School> GetSchoolAsync(int teacherid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHadoUIServiceChannel : Hado.PL.HadoUIServiceReference.IHadoUIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HadoUIServiceClient : System.ServiceModel.ClientBase<Hado.PL.HadoUIServiceReference.IHadoUIService>, Hado.PL.HadoUIServiceReference.IHadoUIService {
        
        public HadoUIServiceClient() {
        }
        
        public HadoUIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HadoUIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HadoUIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HadoUIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Hado.DL.Teacher TeacherGet(int id) {
            return base.Channel.TeacherGet(id);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Teacher> TeacherGetAsync(int id) {
            return base.Channel.TeacherGetAsync(id);
        }
        
        public bool TeacherAdd(Hado.DL.Teacher teacherModel, string username, int roleid, string password) {
            return base.Channel.TeacherAdd(teacherModel, username, roleid, password);
        }
        
        public System.Threading.Tasks.Task<bool> TeacherAddAsync(Hado.DL.Teacher teacherModel, string username, int roleid, string password) {
            return base.Channel.TeacherAddAsync(teacherModel, username, roleid, password);
        }
        
        public bool TeacherRemove(int teacherid, int userid) {
            return base.Channel.TeacherRemove(teacherid, userid);
        }
        
        public System.Threading.Tasks.Task<bool> TeacherRemoveAsync(int teacherid, int userid) {
            return base.Channel.TeacherRemoveAsync(teacherid, userid);
        }
        
        public bool TeacherEdit(Hado.DL.Teacher model, string username, string password) {
            return base.Channel.TeacherEdit(model, username, password);
        }
        
        public System.Threading.Tasks.Task<bool> TeacherEditAsync(Hado.DL.Teacher model, string username, string password) {
            return base.Channel.TeacherEditAsync(model, username, password);
        }
        
        public Hado.DL.Teacher[] TeacherList() {
            return base.Channel.TeacherList();
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Teacher[]> TeacherListAsync() {
            return base.Channel.TeacherListAsync();
        }
        
        public Hado.DL.User UserGet(int id) {
            return base.Channel.UserGet(id);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.User> UserGetAsync(int id) {
            return base.Channel.UserGetAsync(id);
        }
        
        public Hado.DL.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public Hado.DL.Lesson LessonGet(int id) {
            return base.Channel.LessonGet(id);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Lesson> LessonGetAsync(int id) {
            return base.Channel.LessonGetAsync(id);
        }
        
        public bool LessonAdd(Hado.DL.Lesson lessonModel) {
            return base.Channel.LessonAdd(lessonModel);
        }
        
        public System.Threading.Tasks.Task<bool> LessonAddAsync(Hado.DL.Lesson lessonModel) {
            return base.Channel.LessonAddAsync(lessonModel);
        }
        
        public bool LessonRemove(int id) {
            return base.Channel.LessonRemove(id);
        }
        
        public System.Threading.Tasks.Task<bool> LessonRemoveAsync(int id) {
            return base.Channel.LessonRemoveAsync(id);
        }
        
        public bool LessonEdit(Hado.DL.Lesson lessonModel) {
            return base.Channel.LessonEdit(lessonModel);
        }
        
        public System.Threading.Tasks.Task<bool> LessonEditAsync(Hado.DL.Lesson lessonModel) {
            return base.Channel.LessonEditAsync(lessonModel);
        }
        
        public Hado.DL.Lesson[] LessonList(int teacherid) {
            return base.Channel.LessonList(teacherid);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Lesson[]> LessonListAsync(int teacherid) {
            return base.Channel.LessonListAsync(teacherid);
        }
        
        public Hado.DL.QuestionType[] QuestionTypeList() {
            return base.Channel.QuestionTypeList();
        }
        
        public System.Threading.Tasks.Task<Hado.DL.QuestionType[]> QuestionTypeListAsync() {
            return base.Channel.QuestionTypeListAsync();
        }
        
        public Hado.DL.Question QuestionGet(int lessonid, string content, int qtypeid) {
            return base.Channel.QuestionGet(lessonid, content, qtypeid);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Question> QuestionGetAsync(int lessonid, string content, int qtypeid) {
            return base.Channel.QuestionGetAsync(lessonid, content, qtypeid);
        }
        
        public bool QuestionAdd(Hado.DL.Question question) {
            return base.Channel.QuestionAdd(question);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionAddAsync(Hado.DL.Question question) {
            return base.Channel.QuestionAddAsync(question);
        }
        
        public bool QuestionRemove(int QuestionId) {
            return base.Channel.QuestionRemove(QuestionId);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionRemoveAsync(int QuestionId) {
            return base.Channel.QuestionRemoveAsync(QuestionId);
        }
        
        public bool QuestionEdit(Hado.DL.Question question) {
            return base.Channel.QuestionEdit(question);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionEditAsync(Hado.DL.Question question) {
            return base.Channel.QuestionEditAsync(question);
        }
        
        public Hado.DL.Question[] QuestionList() {
            return base.Channel.QuestionList();
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Question[]> QuestionListAsync() {
            return base.Channel.QuestionListAsync();
        }
        
        public Hado.DL.Question[] QuestionListByParameter(int lessonId, string question) {
            return base.Channel.QuestionListByParameter(lessonId, question);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.Question[]> QuestionListByParameterAsync(int lessonId, string question) {
            return base.Channel.QuestionListByParameterAsync(lessonId, question);
        }
        
        public Hado.DL.QuestionAnswer QuestionAnswerGet(int id) {
            return base.Channel.QuestionAnswerGet(id);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.QuestionAnswer> QuestionAnswerGetAsync(int id) {
            return base.Channel.QuestionAnswerGetAsync(id);
        }
        
        public bool QuestionAnswerAdd(Hado.DL.QuestionAnswer question) {
            return base.Channel.QuestionAnswerAdd(question);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionAnswerAddAsync(Hado.DL.QuestionAnswer question) {
            return base.Channel.QuestionAnswerAddAsync(question);
        }
        
        public bool QuestionAnswerRemove(int questionId) {
            return base.Channel.QuestionAnswerRemove(questionId);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionAnswerRemoveAsync(int questionId) {
            return base.Channel.QuestionAnswerRemoveAsync(questionId);
        }
        
        public bool QuestionAnswerEdit(Hado.DL.QuestionAnswer question) {
            return base.Channel.QuestionAnswerEdit(question);
        }
        
        public System.Threading.Tasks.Task<bool> QuestionAnswerEditAsync(Hado.DL.QuestionAnswer question) {
            return base.Channel.QuestionAnswerEditAsync(question);
        }
        
        public Hado.DL.QuestionAnswer QuestionAnswerListByQuestion(int questionId) {
            return base.Channel.QuestionAnswerListByQuestion(questionId);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.QuestionAnswer> QuestionAnswerListByQuestionAsync(int questionId) {
            return base.Channel.QuestionAnswerListByQuestionAsync(questionId);
        }
        
        public Hado.DL.QuestionAnswer[] QuestionAnswerList() {
            return base.Channel.QuestionAnswerList();
        }
        
        public System.Threading.Tasks.Task<Hado.DL.QuestionAnswer[]> QuestionAnswerListAsync() {
            return base.Channel.QuestionAnswerListAsync();
        }
        
        public Hado.DL.ViewModel.QuestionViewModel[] QuestionVM(int lessonid, int questiontypeid, int sorusayisi) {
            return base.Channel.QuestionVM(lessonid, questiontypeid, sorusayisi);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.ViewModel.QuestionViewModel[]> QuestionVMAsync(int lessonid, int questiontypeid, int sorusayisi) {
            return base.Channel.QuestionVMAsync(lessonid, questiontypeid, sorusayisi);
        }
        
        public Hado.DL.ViewModel.QuestionViewModel[] QuestionVMRandom(int lessonid, int questiontypeid, int sorusayisi) {
            return base.Channel.QuestionVMRandom(lessonid, questiontypeid, sorusayisi);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.ViewModel.QuestionViewModel[]> QuestionVMRandomAsync(int lessonid, int questiontypeid, int sorusayisi) {
            return base.Channel.QuestionVMRandomAsync(lessonid, questiontypeid, sorusayisi);
        }
        
        public Hado.DL.School GetSchool(int teacherid) {
            return base.Channel.GetSchool(teacherid);
        }
        
        public System.Threading.Tasks.Task<Hado.DL.School> GetSchoolAsync(int teacherid) {
            return base.Channel.GetSchoolAsync(teacherid);
        }
    }
}
